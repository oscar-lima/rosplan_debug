<?xml version="1.0"?>
<launch>

    <!-- only plan parsing (from file) and dispatch for esterel debugging purposes -->

    <!-- input domain and problem definition here -->
    <arg name="domain" default="turtlebot" />
    <arg name="problem" default="sequential" /> <!-- what you are aiming to test/debug -->
    <arg name="instance" default="problem" /> <!-- name of the problem.pddl file (without the .pddl) -->

    <!-- arguments -->
    <arg name="base_path" default="$(find rpd_pddl_examples)/common/pddl/$(arg domain)/$(arg problem)" />
    <arg name="domain_path" default="$(arg base_path)/domain.pddl" />
    <arg name="init_problem_path" default="$(arg base_path)/$(arg instance).pddl" /> <!-- to upload facts from start to KB -->

    <!-- scene database (MongoDB) -->
    <include file="$(find mongodb_store)/launch/mongodb_store.launch">
        <arg name="db_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
    </include>

    <!-- knowledge base -->
    <node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base"
          type="knowledgeBase" respawn="false" output="screen">
        <param name="domain_path" value="$(arg domain_path)" />
        <param name="problem_path" value="$(arg init_problem_path)" />
        <param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
        <param name="use_unknowns" value="false" /> <!-- conditional planning flags -->
    </node>

    <!-- plan parsing -->
    <include file="$(find rosplan_planning_system)/launch/includes/parsing_interface.launch">
        <arg name="knowledge_base"   value="rosplan_knowledge_base" />
        <arg name="planner_topic"    value="/rosplan_planner_interface/planner_output" />
        <arg name="plan_topic"       value="complete_plan" />
    </include>

    <!-- plan dispatch -->
    <include file="$(find rosplan_planning_system)/launch/includes/dispatch_interface.launch">
        <arg name="knowledge_base"           value="rosplan_knowledge_base" />
        <arg name="plan_topic"               value="/rosplan_parsing_interface/complete_plan" />
        <arg name="action_dispatch_topic"    value="action_dispatch" />
        <arg name="action_feedback_topic"    value="action_feedback" />
        <arg name="display_edge_type"        value="true" /> <!-- color edges by type, useful for debugging -->
    </include>

    <!-- visualize esterel graph in rqt gui window -->
    <node pkg="rqt_gui" type="rqt_gui" name="esterel_viewer"
          args="--standalone rosplan_rqt.esterel_plan_viewer.ROSPlanEsterelPlanViewer" />

</launch>
